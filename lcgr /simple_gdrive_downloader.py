# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–π Google Drive –ø–∞–ø–∫–∏
–ë–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ credentials.json
"""

import os
import re
import requests
from pathlib import Path
from tqdm import tqdm
from urllib.parse import unquote


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
GOOGLE_DRIVE_FOLDER_ID = "1OAECK_1YX0NCqcTLMewNZRgoPKCKYfgt"
DOWNLOAD_FOLDER = "downloaded_pdfs"


def setup_download_folder():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    folder_path = Path(DOWNLOAD_FOLDER)
    folder_path.mkdir(exist_ok=True)
    print(f"‚úÖ –ü–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {folder_path.absolute()}")
    return folder_path


def get_public_folder_files(folder_id):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–π –ø–∞–ø–∫–∏ Google Drive"""
    print("üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø—É–±–ª–∏—á–Ω–æ–π –ø–∞–ø–∫–µ...")
    
    try:
        # URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—É–±–ª–∏—á–Ω–æ–π –ø–∞–ø–∫–∏
        url = f"https://drive.google.com/drive/folders/{folder_id}"
        
        # –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        
        # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ HTML
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –∏—Ö ID –∏ –∏–º–µ–Ω–∞–º–∏
        file_pattern = r'"([a-zA-Z0-9_-]{25,})".*?"([^"]*\.pdf)"'
        matches = re.findall(file_pattern, response.text, re.IGNORECASE)
        
        files = []
        seen_ids = set()
        
        for file_id, file_name in matches:
            # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ ID
            if file_id not in seen_ids and file_name.lower().endswith('.pdf'):
                files.append({
                    'id': file_id,
                    'name': file_name
                })
                seen_ids.add(file_id)
        
        print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤: {len(files)}")
        return files
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {e}")
        return []


def download_file_direct(file_id, file_name, download_folder):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é –ø–æ ID"""
    try:
        # –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        download_url = f"https://drive.google.com/uc?export=download&id={file_id}"
        
        # –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        safe_file_name = "".join(c for c in file_name if c.isalnum() or c in (' ', '-', '_', '.')).rstrip()
        if not safe_file_name.lower().endswith('.pdf'):
            safe_file_name += '.pdf'
        
        file_path = download_folder / safe_file_name
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        
        response = requests.get(download_url, headers=headers, stream=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ PDF —Ñ–∞–π–ª
        content_type = response.headers.get('content-type', '')
        if 'application/pdf' not in content_type and 'html' in content_type:
            # –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
            # –ò—â–µ–º —Å—Å—ã–ª–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            if 'confirm=' in response.text:
                confirm_pattern = r'confirm=([a-zA-Z0-9_-]+)'
                confirm_match = re.search(confirm_pattern, response.text)
                if confirm_match:
                    confirm_token = confirm_match.group(1)
                    download_url = f"https://drive.google.com/uc?export=download&confirm={confirm_token}&id={file_id}"
                    response = requests.get(download_url, headers=headers, stream=True)
        
        response.raise_for_status()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(file_path, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:
                    f.write(chunk)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if file_path.stat().st_size < 1000:  # –ú–µ–Ω—å—à–µ 1KB - –≤–µ—Ä–æ—è—Ç–Ω–æ –æ—à–∏–±–∫–∞
            file_path.unlink()  # –£–¥–∞–ª—è–µ–º –ø–ª–æ—Ö–æ–π —Ñ–∞–π–ª
            return False, None
        
        return True, str(file_path)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {file_name}: {e}")
        return False, None


def download_all_pdfs_simple():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö PDF"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–π Google Drive –ø–∞–ø–∫–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    download_folder = setup_download_folder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ PDF —Ñ–∞–π–ª–æ–≤
    pdf_files = get_public_folder_files(GOOGLE_DRIVE_FOLDER_ID)
    if not pdf_files:
        print("üìÑ PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø–∞–ø–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    print(f"üì• –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ {len(pdf_files)} —Ñ–∞–π–ª–æ–≤...")
    
    successful_downloads = 0
    failed_downloads = []
    
    for file_info in tqdm(pdf_files, desc="–°–∫–∞—á–∏–≤–∞–Ω–∏–µ"):
        file_id = file_info['id']
        file_name = file_info['name']
        
        # –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        safe_file_name = "".join(c for c in file_name if c.isalnum() or c in (' ', '-', '_', '.')).rstrip()
        if not safe_file_name.lower().endswith('.pdf'):
            safe_file_name += '.pdf'
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–∫–∞—á–∞–Ω –ª–∏ —Ñ–∞–π–ª —É–∂–µ
        file_path = download_folder / safe_file_name
        if file_path.exists():
            print(f"‚è≠Ô∏è  –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {safe_file_name}")
            successful_downloads += 1
            continue
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        success, saved_path = download_file_direct(file_id, file_name, download_folder)
        
        if success:
            successful_downloads += 1
            print(f"‚úÖ –°–∫–∞—á–∞–Ω: {safe_file_name}")
        else:
            failed_downloads.append(file_name)
    
    # –ò—Ç–æ–≥–∏
    print("=" * 60)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {successful_downloads} —Ñ–∞–π–ª–æ–≤")
    if failed_downloads:
        print(f"‚ùå –û—à–∏–±–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {len(failed_downloads)} —Ñ–∞–π–ª–æ–≤")
        for failed_file in failed_downloads:
            print(f"   - {failed_file}")
    
    print(f"üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {download_folder.absolute()}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        download_all_pdfs_simple()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main() 