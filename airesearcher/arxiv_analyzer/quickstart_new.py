#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –º–æ–¥—É–ª—è –∞–Ω–∞–ª–∏–∑–∞ arXiv —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
1. –ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑
2. –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ  
3. –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
"""

import asyncio
import os
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
import dotenv
dotenv.load_dotenv()

from .main import ArxivAnalyzer


async def scenario_1_first_analysis():
    """–°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑ (—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π)"""
    print("üöÄ –°–¶–ï–ù–ê–†–ò–ô 1: –ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑")
    print("="*50)
    
    analyzer = ArxivAnalyzer(enable_state_tracking=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç–æ–µ)
    print("üìä –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:")
    analyzer.print_progress()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑
    print("\nüîç –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...")
    results = await analyzer.run_full_analysis(
        max_papers_per_query=5,  # –ù–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç
        max_total_papers=15,
        use_llm_ranking=False,   # –ë—ã—Å—Ç—Ä–µ–µ –±–µ–∑ LLM
        incremental=True
    )
    
    if 'error' not in results:
        print(f"\n‚úÖ –ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìà –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {results['statistics']['papers_analyzed']} —Å—Ç–∞—Ç–µ–π")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è: {results['duration_seconds']:.1f} —Å–µ–∫")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-3 —Å—Ç–∞—Ç—å–∏
        top_papers = results['top_papers'][:3]
        print(f"\nüèÜ –¢–û–ü-3 –°–¢–ê–¢–¨–ò:")
        for paper in top_papers:
            print(f"   {paper['rank']}. {paper['title'][:60]}...")
            print(f"      üìà –û—Ü–µ–Ω–∫–∞: {paper['score']:.3f}")
    
    return results


async def scenario_2_incremental_update():
    """–°—Ü–µ–Ω–∞—Ä–∏–π 2: –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"""
    print("\nüîÑ –°–¶–ï–ù–ê–†–ò–ô 2: –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
    print("="*50)
    
    analyzer = ArxivAnalyzer(enable_state_tracking=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    print("üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º:")
    progress = analyzer.show_progress()
    if progress.get('total_analyzed_papers', 0) > 0:
        print(f"   üìö –£–∂–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {progress['total_analyzed_papers']} —Å—Ç–∞—Ç–µ–π")
        print(f"   üïê –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è: {progress['last_session']['id']}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    print("\nüîç –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π...")
    results = await analyzer.run_full_analysis(
        max_papers_per_query=5,
        max_total_papers=20,  # –ß—É—Ç—å –±–æ–ª—å—à–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö
        use_llm_ranking=False,
        incremental=True  # –ö–ª—é—á–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä!
    )
    
    if 'message' in results:
        print(f"‚ÑπÔ∏è {results['message']}")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø —Å—Ç–∞—Ç—å–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
        top_papers = analyzer.get_top_papers_all_time(5)
        if top_papers:
            print("\nüèÜ –¢–û–ü-5 –°–¢–ê–¢–ï–ô –ó–ê –í–°–ï –í–†–ï–ú–Ø:")
            for paper in top_papers:
                print(f"   {paper['rank']}. {paper['title'][:50]}...")
                print(f"      üìà –û—Ü–µ–Ω–∫–∞: {paper['overall_score']:.3f}")
    elif 'error' not in results:
        print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìà –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π: {results['statistics']['papers_analyzed']}")
        print(f"üìä –í—Å–µ–≥–æ –≤ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–∏: {results['statistics']['total_papers_in_ranking']}")
    
    return results


def scenario_3_show_progress():
    """–°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    print("\nüìà –°–¶–ï–ù–ê–†–ò–ô 3: –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
    print("="*50)
    
    analyzer = ArxivAnalyzer(enable_state_tracking=True)
    
    # –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    analyzer.print_progress()
    
    # –¢–æ–ø —Å—Ç–∞—Ç—å–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
    top_papers = analyzer.get_top_papers_all_time(7)
    if top_papers:
        print(f"\nüî¨ –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –¢–û–ü-{len(top_papers)} –°–¢–ê–¢–ï–ô:")
        for i, paper in enumerate(top_papers, 1):
            print(f"\n{i}. {paper['title'][:70]}...")
            print(f"   üìà –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {paper['overall_score']:.3f}")
            print(f"   üèÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {paper['priority_score']:.3f}")
            print(f"   üìÖ –ê–Ω–∞–ª–∏–∑: {paper['analysis_date'][:16]}")
            print(f"   üÜî arXiv: {paper['arxiv_id']}")
            print(f"   üè∑Ô∏è –°–µ—Å—Å–∏—è: {paper['session_id']}")
    else:
        print("\nüìù –°—Ç–∞—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑!")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"""
    print("üß™ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢: –ê–ù–ê–õ–ò–ó ARXIV –° –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï–ú –ü–†–û–ì–†–ï–°–°–ê")
    print("="*70)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not os.getenv("GEMINI_API_KEY") or os.getenv("GEMINI_API_KEY") == "your_gemini_api_key_here":
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ API –∫–ª—é—á Gemini:")
        print("   export GEMINI_API_KEY='your_actual_key'")
        return
    
    if not Path("./docsforllm/initialtask.md").exists():
        print("‚ùå –§–∞–π–ª ./docsforllm/initialtask.md –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞")
        return
    
    try:
        # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑
        results1 = await scenario_1_first_analysis()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        await asyncio.sleep(2)
        
        # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        results2 = await scenario_2_incremental_update()
        
        # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        scenario_3_show_progress()
        
        print("\n" + "="*70)
        print("‚ú® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("\nüí° –ß—Ç–æ –¥–∞–ª—å—à–µ:")
        print("   1. –ò–∑–º–µ–Ω–∏—Ç–µ ./docsforllm/initialtask.md")
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ python demo.py --quick")
        print("   3. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
        print("   4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ python demo.py --show-progress –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        print("="*70)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - API –∫–ª—é—á Gemini –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
        print("   - –§–∞–π–ª ./docsforllm/initialtask.md —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("   - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main()) 